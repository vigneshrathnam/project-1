{"version":3,"sources":["components/body.js","components/table.js","App.js","reportWebVitals.js","index.js"],"names":["body","data","index","first_name","last_name","email","avatar","align","className","src","alt","Table","value","useState","option","setOption","setData","useEffect","filter","id","parseInt","border","colSpan","defaultValue","onChange","e","target","map","i","App","a","fetch","response","json","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAeeA,MAbf,YAAgC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACZC,EAAyCF,EAAzCE,WAAYC,EAA6BH,EAA7BG,UAAWC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,OACtC,OACE,qBAAIC,MAAM,SAAV,UACE,+BAAKL,EAAL,OACA,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAI,qBAAKG,UAAU,oBAAoBC,IAAKH,EAAQI,IAAKP,EAAW,IAAIC,UCsD/DO,MA7Df,YAAiC,IAAVC,EAAS,EAAfX,KACf,EAA4BY,oBAAU,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAASD,GAAjC,mBAAOX,EAAP,KAAae,EAAb,KAcA,OAVAC,qBAAU,WACRD,EACEJ,EAAMM,QAAO,gBAAGC,EAAH,EAAGA,GAAH,OACW,IAAtBC,SAASN,IAAwBK,IAAOC,SAASN,SAKpD,CAACA,IAGF,sBAAKN,UAAU,YAAf,UACE,oBAAIA,UAAU,oCAAd,0BACA,qBAAKA,UAAU,mBAAf,SACE,wBACEA,UAAU,gDACVa,OAAO,IAFT,UAIE,uBAAOb,UAAU,sCAAjB,SACE,qBAAIA,UAAU,OAAd,UACE,sCACA,4CACA,2CACA,uCACA,4CAGJ,kCACE,6BACE,qBAAIc,QAAQ,IAAZ,uBACa,IACX,yBACEd,UAAU,kBACVe,aAAa,KACbC,SArChB,SAAkBC,GAChBV,EAAUU,EAAEC,OAAOd,QAiCP,UAKE,wBAAQA,MAAM,KAAd,iBACCA,EAAMe,KAAI,SAACf,EAAOgB,GAAR,OACT,wBAAgBhB,MAAOA,EAAMO,GAA7B,SACGP,EAAMT,YADIyB,cAOpB3B,EAAK0B,KAAI,SAACf,EAAOgB,GAAR,OACR,cAAC,EAAD,CAAqB1B,MAAO0B,EAAI,EAAG3B,KAAMW,GAA9BA,EAAMO,mB,MCpChBU,MAff,WAEEZ,qBAAU,WACR,sBAAC,8BAAAa,EAAA,sEACwBC,MAHf,sCAET,cACOC,EADP,gBAEoBA,EAASC,OAF7B,OAEOhC,EAFP,OAGCe,EAAQf,EAAKA,MAHd,0CAAD,KAKC,IACH,MAAwBY,mBAAS,IAAjC,mBAAOZ,EAAP,KAAae,EAAb,KACA,OACE,qBAAKR,UAAU,MAAf,SAAsC,IAAhBP,EAAKiC,OAAe,+CAAe,cAAC,EAAD,CAAOjC,KAAMA,OCH3DkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7cba0406.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction body({ data, index }) {\r\n  const { first_name, last_name, email, avatar } = data;\r\n  return (\r\n    <tr align=\"center\">\r\n      <td>{index}.</td>\r\n      <td>{first_name}</td>\r\n      <td>{last_name}</td>\r\n      <td>{email}</td>\r\n      <td><img className=\"rounded img-fluid\" src={avatar} alt={first_name+\" \"+last_name}/></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default body;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Body from \"./body\";\r\n\r\nfunction Table({ data: value }) {\r\n  const [option, setOption] = useState(-1);\r\n  const [data, setData] = useState(value);\r\n  function onChange(e) {\r\n    setOption(e.target.value);\r\n  }\r\n  useEffect(() => {\r\n    setData(\r\n      value.filter(({ id }) =>\r\n        parseInt(option) === -1 ? true : id === parseInt(option)\r\n      )\r\n    );\r\n    return;\r\n    // eslint-disable-next-line\r\n  }, [option]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"h2 bg-primary text-white p-2 mb-1\">User Details</h2>\r\n      <div className=\"table-responsive\">\r\n        <table\r\n          className=\"table table-bordered table-hover align-middle\"\r\n          border=\"1\"\r\n        >\r\n          <thead className=\"align-middle table-dark text-center\">\r\n            <tr className=\"info\">\r\n              <th>S.no</th>\r\n              <th>First name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Photo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"5\">\r\n                First Name{\" \"}\r\n                <select\r\n                  className=\"form-select m-2\"\r\n                  defaultValue=\"-1\"\r\n                  onChange={onChange}\r\n                >\r\n                  <option value=\"-1\">All</option>\r\n                  {value.map((value, i) => (\r\n                    <option key={i} value={value.id}>\r\n                      {value.first_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            {data.map((value, i) => (\r\n              <Body key={value.id} index={i + 1} data={value} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"./components/table\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  const url = \"https://reqres.in/api/users?page=2\";\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data.data);\n    })();\n  }, []);\n  const [data, setData] = useState([]);\n  return (\n    <div className=\"App\">{data.length === 0 ? <>loading</> : <Table data={data}/>}</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}